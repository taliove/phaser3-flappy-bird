{"version":3,"sources":["webpack:///./src/scene/preload/index.js","webpack:///./src/const/index.js","webpack:///./src/scene/menu/index.js","webpack:///./src/scene/boot/index.js","webpack:///./src/store/index.js","webpack:///./src/scene/play/index.js","webpack:///./src/scene/index.js","webpack:///./src/main.js"],"names":["Preload","Phaser","Scene","constructor","super","key","progress","width","height","this","sys","game","canvas","y","w","add","graphics","config","x","load","on","value","clear","lineStyle","fillStyle","strokeRoundedRect","h","fillRoundedRect","Math","floor","preload","multiatlas","bitmapFont","audio","image","spritesheet","frameWidth","frameHeight","create","scene","start","birds","end","prefix","suffix","themes","BIRD_TYPE","count","length","yellow","blue","red","get","index","getRandom","Between","THEME_TYPE","dark","day","Play","groundY","bg","tileSprite","setOrigin","ground","bird","sprite","setSize","anims","frames","generateFrameNames","frameRate","repeat","play","title","titleGroup","group","tween","targets","ease","delay","duration","yoyo","setInteractive","update","tilePositionX","boot","store","getMaxScore","getStorage","setMaxScore","score","setStorage","window","localStorage","setItem","JSON","stringify","defaultValue","parse","getItem","undefined","menu","pipeIndex","gap","gameSpeed","pipeDelay","flyHeight","birdGravity","hasStarted","gameIsOver","hasHitGround","hasHitPipe","init","theme","setDepth","physics","existing","labelScore","bitmapText","setScale","labelScoreGroup","labelScoreBoard","labelScoreMedal","gameOver","toggleVisible","soundFly","sound","soundScore","soundHitGround","soundHitPipe","body","setCircle","setBounce","setCollideWorldBounds","birdTween","playTip","setGravityY","setAllowGravity","readyText","flyTween","tweens","angle","getStart","target","getEnd","onStart","flyDoing","flyDownTween","isPlaying","stop","onComplete","restart","pause","v1","v2","velocity","abs","getBirdHeight","pipes","input","startGame","timer","time","addEvent","loop","callback","addColumnPipes","paused","callbackScope","physicBirdPipe","overlap","hitPipe","physicBirdGround","collider","hitGround","fly","destroy","setVisible","stopGame","cameras","main","shake","removeAllEvents","maxStore","newRecord","setPosition","setFrame","labelMaxScore","getChildren","alpha","state","setActive","forEach","pipe","setVelocity","setVelocityY","max","position","topPipeY","bottomPipeY","addOnePipe","y1","y2","children","pipe1","pipe2","remove","hasScored","setGravity","setText","onload","type","AUTO","parent","zoom","autoResize","scenes","default","arcade","debug","gravity","resize","document","querySelector","windowWidth","innerWidth","windowHeight","innerHeight","gameRatio","style","Game","addEventListener"],"mappings":"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","file":"static/js/app.8a6ef83c.js","sourcesContent":["class Preload extends Phaser.Scene {\r\n    constructor() {\r\n        super({key: \"preload\"})\r\n    }\r\n\r\n    progress() {\r\n        let {width, height} = this.sys.game.canvas;\r\n        let x = 50, y = height / 2 - 5, w = width - 100, h = 10, radius = 5;\r\n        let progress = this.add.graphics({\r\n            config: {\r\n                x, y\r\n            }\r\n        });\r\n\r\n        this.load.on('progress', function (value) {\r\n            progress.clear();\r\n            progress.lineStyle(1, 0xFFFFFF, 1.0);\r\n            progress.fillStyle(0xFFFFFF, 1);\r\n            progress.strokeRoundedRect(x - 1, y - 1, w + 2, h + 2, radius);\r\n            progress.fillRoundedRect(x, y, Math.floor(w * value), h, radius);\r\n        });\r\n        // this.load.on('complete', function () {\r\n        //     progress.destroy();\r\n        // });\r\n    }\r\n\r\n    preload() {\r\n        this.progress();\r\n        this.load.multiatlas('assets', 'static/assets/atlas.json', \"static/assets\");\r\n        this.load.bitmapFont(\"flappy_font\", 'static/assets/fonts/flappyfont/flappyfont.png', 'static/assets/fonts/flappyfont/flappyfont.fnt');//显示分数的字体\r\n        //飞翔的音效\r\n        this.load.audio(\"fly_sound\", ['static/assets/sounds/wing.ogg', 'static/assets/sounds/wing.mp3']);\r\n        //得分的音效\r\n        this.load.audio(\"score_sound\", ['static/assets/sounds/point.ogg', 'static/assets/sounds/point.mp3']);\r\n        //撞击管道的音效\r\n        this.load.audio(\"hit_pipe_sound\", ['static/assets/sounds/hit.ogg', 'static/assets/sounds/hit.mp3']);\r\n        //撞击地面的音效\r\n        this.load.audio(\"hit_ground_sound\", ['static/assets/sounds/die.ogg', 'static/assets/sounds/die.mp3']);\r\n        //切换场景声效\r\n        this.load.audio(\"swooshing\", ['static/assets/sounds/swooshing.ogg', 'static/assets/sounds/swooshing.mp3']);\r\n        //得分板\r\n        this.load.image('score_board', 'static/assets/scoreboard.png');\r\n\r\n        this.load.spritesheet('medals', 'static/assets/medals.png', {\r\n            frameWidth: 44, frameHeight: 46\r\n        }); //得分板\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(\"menu\");\r\n    }\r\n}\r\n\r\nexport default Preload;\n\n\n// WEBPACK FOOTER //\n// ./src/scene/preload/index.js","import 'phaser';\r\n\r\n/**\r\n * 鸟种类\r\n * @type {*[]}\r\n */\r\nlet birds = [\r\n    {key: 'yellow-bird', config: {start: 1, end: 3, prefix: \"yellow-bird\", suffix: \".png\"}},\r\n    {key: 'blue-bird', config: {start: 1, end: 3, prefix: \"blue-bird\", suffix: \".png\"}},\r\n    {key: 'red-bird', config: {start: 1, end: 3, prefix: \"red-bird\", suffix: \".png\"}}\r\n];\r\n\r\nlet themes = [\r\n    \"bg-dark.png\", \"bg-day.png\"\r\n];\r\n\r\n/**\r\n * 鸟样式\r\n * @type {{yellow: string, blue: string, red: string}}\r\n */\r\nexport const BIRD_TYPE = {\r\n    count: birds.length,\r\n    yellow: birds[0],\r\n    blue: birds[1],\r\n    red: birds[2],\r\n    /**\r\n     * 获取鸟儿\r\n     * @param index\r\n     * @returns {null|{key: string, config:object}}\r\n     */\r\n    get(index) {\r\n        if (index < birds.length) {\r\n            return birds[index];\r\n        }\r\n        return null;\r\n    },\r\n    /**\r\n     * 获取随机鸟样式\r\n     * @returns {*}\r\n     */\r\n    getRandom() {\r\n        return birds[Phaser.Math.Between(0, birds.length - 1)];\r\n    }\r\n};\r\n\r\n/**\r\n * 主题样式\r\n * @type {{dark: ({\"theme-dark\"}|*), day: ({\"theme-day\"}|*), getRandom(): *}}\r\n */\r\nexport const THEME_TYPE = {\r\n    /**\r\n     * 黑暗主题\r\n     */\r\n    dark: themes[0],\r\n    /**\r\n     * 白天主题\r\n     */\r\n    day: themes[1],\r\n    /**\r\n     * 获取随机主题\r\n     * @returns {{\"theme-dark\"}|{\"theme-day\"}|*}\r\n     */\r\n    getRandom() {\r\n        return themes[Phaser.Math.Between(0, themes.length - 1)];\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/const/index.js","import {BIRD_TYPE, THEME_TYPE} from '@/const';\r\n\r\nclass Play extends Phaser.Scene {\r\n    constructor() {\r\n        super({key: \"menu\"});\r\n    }\r\n\r\n    create() {\r\n        let {width, height} = this.sys.game.canvas;\r\n        let groundY = height * 0.8;\r\n\r\n        this.bg = this.add.tileSprite(0, 0, width, height, 'assets', THEME_TYPE.day).setOrigin(0);\r\n        this.ground = this.add.tileSprite(0, groundY, width, 112, 'assets', 'ground.png').setOrigin(0);\r\n\r\n        let bird = this.add.sprite(width / 2, 230, 'bird');\r\n        bird.setSize(34, 24);\r\n        this.anims.create({\r\n            key: BIRD_TYPE.yellow.key,\r\n            frames: this.anims.generateFrameNames('assets', BIRD_TYPE.yellow.config),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: BIRD_TYPE.blue.key,\r\n            frames: this.anims.generateFrameNames('assets', BIRD_TYPE.blue.config),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: BIRD_TYPE.red.key,\r\n            frames: this.anims.generateFrameNames('assets', BIRD_TYPE.red.config),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        });\r\n        bird.anims.play(BIRD_TYPE.yellow.key, true);\r\n\r\n        let title = this.add.image(width / 2, 170, 'assets', 'flappy.png');\r\n\r\n        let titleGroup = this.add.group();\r\n        titleGroup.add(bird);\r\n        titleGroup.add(title);\r\n\r\n        this.add.tween({\r\n            targets: [bird],\r\n            y: \"+=5\",\r\n            ease: null,\r\n            delay: 0,\r\n            duration: 400,\r\n            yoyo: true,\r\n            repeat: -1\r\n        });\r\n        let btn = this.add.sprite(width / 2, height - 150, 'assets', 'start.png').setInteractive();\r\n        btn.on('pointerdown', () => {\r\n            this.scene.start('play');\r\n        })\r\n    }\r\n\r\n    update() {\r\n        this.ground.tilePositionX += 2;\r\n    }\r\n}\r\n\r\nexport default Play;\n\n\n// WEBPACK FOOTER //\n// ./src/scene/menu/index.js","export default {\r\n    key: \"boot\",\r\n    preload() {\r\n        this.load.image('loading', \"static/assets/preloader.gif\");\r\n    },\r\n    create() {\r\n        this.scene.start('preload');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scene/boot/index.js","/**\r\n * 存储\r\n */\r\nclass Store {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取本机历史最高分\r\n     */\r\n    getMaxScore() {\r\n        return this.getStorage(\"max-score\", 0);\r\n    }\r\n\r\n    /**\r\n     * 设置本机历史最高分\r\n     */\r\n    setMaxScore(score) {\r\n        this.setStorage(\"max-score\", score);\r\n    }\r\n\r\n    setStorage(key, value) {\r\n        if (window.localStorage) {\r\n            window.localStorage.setItem(key, window.JSON.stringify(value));\r\n        }\r\n    }\r\n\r\n    getStorage(key, defaultValue) {\r\n        if (window.localStorage) {\r\n            return window.JSON.parse(window.localStorage.getItem(key)) || defaultValue;\r\n        }\r\n        return defaultValue === undefined ? null : defaultValue;\r\n    }\r\n}\r\n\r\nexport default new Store();\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","import {BIRD_TYPE, THEME_TYPE} from '@/const';\r\nimport store from '../../store/index.js';\r\n\r\nclass Play extends Phaser.Scene {\r\n    constructor() {\r\n        super({key: \"play\"});\r\n        /**\r\n         * 管道索引\r\n         * @type {number}\r\n         */\r\n        this.pipeIndex = 0;\r\n        /**\r\n         * 分数\r\n         * @type {number}\r\n         */\r\n        this.score = 0;\r\n        /**\r\n         * 游戏场景宽度\r\n         * @type {number}\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * 游戏场景高度\r\n         * @type {number}\r\n         */\r\n        this.height = 0;\r\n        /**\r\n         * 上下管道之间的间隙宽度\r\n         * @type {number}\r\n         */\r\n        this.gap = 165;\r\n        /**\r\n         * 游戏速度或管道速度\r\n         * @type {number}\r\n         */\r\n        this.gameSpeed = -110;\r\n        /**\r\n         * 管道生成间隔时间\r\n         * @type {number}\r\n         */\r\n        this.pipeDelay = 1500;\r\n        /**\r\n         * 每次飞行高度\r\n         * @type {number}\r\n         */\r\n        this.flyHeight = -300;\r\n        /**\r\n         * 小鸟重力速度\r\n         * @type {number}\r\n         */\r\n        this.birdGravity = 245;\r\n\r\n        /**\r\n         * 游戏是否已开始\r\n         * @type {boolean}\r\n         */\r\n        this.hasStarted = false;\r\n        /**\r\n         * 游戏是否已结束\r\n         * @type {boolean}\r\n         */\r\n        this.gameIsOver = false;\r\n        /**\r\n         * 是否已撞击地面\r\n         * @type {boolean}\r\n         */\r\n        this.hasHitGround = false;\r\n        /**\r\n         * 是否已撞击管道\r\n         * @type {boolean}\r\n         */\r\n        this.hasHitPipe = false;\r\n    }\r\n\r\n    init() {\r\n        let {width, height} = this.sys.game.canvas;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.hasStarted = false;\r\n        this.gameIsOver = false;\r\n        this.hasHitGround = false;\r\n        this.hasHitPipe = false;\r\n        //  重置主题与鸟样式\r\n        /**\r\n         * 主题\r\n         * @type {{bg: *}}\r\n         */\r\n        this.theme = {\r\n            /**\r\n             * 背景\r\n             */\r\n            bg: THEME_TYPE.getRandom(),\r\n            /**\r\n             * 鸟儿配置\r\n             */\r\n            bird: BIRD_TYPE.getRandom()\r\n        };\r\n    }\r\n\r\n    create() {\r\n        let {width, height} = this.sys.game.canvas;\r\n        this.init();\r\n        /**\r\n         * 背景\r\n         */\r\n        this.bg = this.add.tileSprite(0, 0, width, height, 'assets', this.theme.bg).setOrigin(0);\r\n        /**\r\n         * 地板\r\n         * @type {*|Phaser.GameObjects.Group}\r\n         */\r\n        this.ground = this.add.tileSprite(0, height - 112, width, 112, 'assets', 'ground.png').setOrigin(0).setDepth(999);\r\n        this.physics.add.existing(this.ground, true);\r\n\r\n        /**\r\n         * 分数展示\r\n         * @type {void | * | Phaser.GameObjects.Particles.ParticleEmitter}\r\n         */\r\n        this.labelScore = this.add.bitmapText(width / 2 - 10, 50, \"flappy_font\", \"0\").setScale(0.6).setDepth(3);\r\n        this.labelScoreGroup = this.add.group();\r\n        this.labelScoreGroup.add(this.labelScore, true);\r\n        this.labelScoreBoard = this.labelScoreGroup.create(width / 2, 100, \"score_board\").setDepth(2);\r\n        this.labelScoreMedal = this.labelScoreGroup.create(width / 2 - 65, 105, \"medals\", 0).setDepth(2);\r\n        this.gameOver = this.labelScoreGroup.create(width / 2, 0, 'assets', \"gameover.png\").setDepth(3);\r\n        let btn = this.labelScoreGroup.create(width / 2, height / 2 - 50, 'assets', 'start.png').setInteractive().setDepth(2);\r\n        btn.on('pointerdown', () => {\r\n            this.scene.start('play');\r\n        });\r\n        this.labelScoreGroup.toggleVisible();\r\n\r\n        //  声音\r\n        this.soundFly = this.sound.add(\"fly_sound\");\r\n        this.soundScore = this.sound.add(\"score_sound\");\r\n        this.soundHitGround = this.sound.add(\"hit_pipe_sound\");\r\n        this.soundHitPipe = this.sound.add(\"hit_pipe_sound\");\r\n\r\n        /**\r\n         * 我们的主角，鸟儿\r\n         * @type {*|Phaser.GameObjects.Group}\r\n         */\r\n        this.bird = this.physics.add.sprite(90, 260, 'bird').setDepth(1);\r\n        this.bird.body.setCircle(13, 2, -2);\r\n        this.bird.setBounce(0.4);\r\n        this.bird.setCollideWorldBounds(true);\r\n        this.birdTween = this.add.tween({\r\n            targets: [this.bird],\r\n            y: \"+=5\",\r\n            delay: 0,\r\n            duration: 400,\r\n            yoyo: true,\r\n            repeat: -1\r\n        });\r\n        //提示点击屏幕的图片\r\n        this.playTip = this.add.image(width / 2, 230, 'assets', 'tips.png').setOrigin(0.5, 0);\r\n        this.bird.setBounce(0.1);\r\n        this.bird.setCollideWorldBounds(true);\r\n        this.bird.anims.play(this.theme.bird.key, true);\r\n        this.bird.body.setGravityY(this.birdGravity);\r\n        this.bird.body.setAllowGravity(false);\r\n        //\r\n        //get ready 文字\r\n        this.readyText = this.add.image(width / 2, 110, 'assets', 'ready.png').setOrigin(0.5, 0);\r\n\r\n        /**\r\n         * 小鸟飞行姿态\r\n         * @type {Phaser.Tweens.Tween}\r\n         */\r\n        this.flyTween = this.tweens.add({\r\n            targets: [this.bird],\r\n            angle: {\r\n                getStart(target, key, value) {\r\n                    let angle = target[key];\r\n                    if (angle <= -45) {\r\n                        return -45;\r\n                    }\r\n                    if (angle >= 0) {\r\n                        return -45;\r\n                    }\r\n                    return target[key];\r\n                },\r\n                getEnd() {\r\n                    return -45;\r\n                }\r\n            },\r\n            duration: 350,\r\n            onStart: (tween, target) => {\r\n                this.flyDoing = true;\r\n                if (this.flyDownTween.isPlaying()) {\r\n                    this.flyDownTween.stop();\r\n                }\r\n            },\r\n            onComplete: (tween, target) => {\r\n                if (this.flyDoing) {\r\n                    this.flyDoing = false;\r\n                    if (this.flyDownTween.isPlaying()) {\r\n                        this.flyDownTween.stop();\r\n                        return;\r\n                    }\r\n                }\r\n                this.flyDownTween.restart();\r\n            }\r\n        });\r\n        this.flyTween.pause();\r\n        /**\r\n         * 小鸟下降姿态\r\n         */\r\n        this.flyDownTween = this.tweens.add({\r\n            delay: (v1, v2) => {\r\n                let y = this.bird.body.velocity.y;\r\n                let delay = Math.abs(y) * 10;\r\n                delay = delay <= 50 ? 200 : (delay >= 350 ? 350 : delay);\r\n                // console.log(\"delay\", delay);\r\n                return delay;\r\n            },\r\n            targets: [this.bird],\r\n            angle: {\r\n                getStart(target, key, value) {\r\n                    return target[key];\r\n                },\r\n                getEnd() {\r\n                    return 90;\r\n                }\r\n            },\r\n            duration: () => {\r\n                let duration = this.getBirdHeight() * 1.5;\r\n                duration = duration <= 200 ? 300 : 400;\r\n                // console.log(\"duration\", duration, \"height\", this.getBirdHeight());\r\n                return duration;\r\n            }\r\n        });\r\n        this.flyDownTween.pause();\r\n        this.pipes = this.add.group();\r\n\r\n        this.input.on(\"pointerdown\", this.startGame, this);\r\n        //利用时钟事件来循环产生管道\r\n        this.timer = this.time.addEvent({\r\n            delay: this.pipeDelay,\r\n            loop: true,\r\n            callback: this.addColumnPipes,\r\n            paused: true,\r\n            callbackScope: this\r\n        });\r\n        this.physicBirdPipe = this.physics.add.overlap(this.bird, this.pipes, this.hitPipe, null, this);\r\n        this.physicBirdGround = this.physics.add.collider(this.bird, this.ground, this.hitGround, null, this);\r\n    }\r\n\r\n    /**\r\n     * 开始游戏\r\n     */\r\n    startGame() {\r\n        if (!this.hasStarted && !this.gameIsOver) {\r\n            this.gameIsOver = false; //游戏是否已结束的标志\r\n            this.hasHitGround = false; //是否已碰撞到地面的标志\r\n            this.hasStarted = true; //游戏是否已经开始的标志\r\n            this.score = 0; //初始得分\r\n            this.birdTween.stop();\r\n            this.bird.body.setAllowGravity(true);\r\n            this.readyText.destroy();\r\n            this.playTip.destroy();\r\n            this.timer.paused = false;\r\n            this.labelScore.setVisible(true);\r\n        } else {\r\n            this.fly();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 游戏结束\r\n     */\r\n    stopGame() {\r\n        this.cameras.main.shake(40);\r\n        this.gameIsOver = true;\r\n        this.time.removeAllEvents();\r\n        this.hasStarted = false;\r\n        this.timer.paused = true;\r\n        // this.bg.setActive(false);\r\n        // this.ground.setActive(false);\r\n        this.labelScoreGroup.toggleVisible();\r\n        let maxStore = store.getMaxScore() || 0;\r\n        let newRecord = false;\r\n        if (maxStore < this.score) {\r\n            maxStore = this.score;\r\n            store.setMaxScore(this.score);\r\n            newRecord = true;\r\n\r\n        }\r\n        //  计分牌\r\n        this.labelScore.setScale(0.3).setVisible(true);\r\n        this.labelScore.setPosition(this.width - this.labelScore.width - 45, 80);\r\n        if (this.score >= 100) {\r\n            this.labelScoreMedal.setFrame(1);\r\n        } else if (this.score >= 50) {\r\n            this.labelScoreMedal.setFrame(0);\r\n        } else {\r\n            this.labelScoreMedal.setVisible(false);\r\n        }\r\n        let labelMaxScore = this.add.bitmapText(this.width / 2 + 80, 127, \"flappy_font\", maxStore).setScale(0.3).setDepth(3);\r\n        labelMaxScore.setPosition(this.width - labelMaxScore.width - 45, 127);\r\n        this.labelScoreGroup.add(labelMaxScore, true);\r\n        this.add.tween({\r\n            targets: this.labelScoreGroup.getChildren(),\r\n            y: \"+=100\",\r\n            alpha: 1,\r\n            duration: 600\r\n        });\r\n        this.add.tween({\r\n            targets: this.bird,\r\n            angle: () => {\r\n                if (this.bird.angle < 90 && this.bird.angle >= 0) {\r\n                    return 90;\r\n                }\r\n                return this.bird.angle;\r\n            },\r\n            duration: () => {\r\n                let duration = this.getBirdHeight() * 1.5;\r\n                return duration <= 0 ? 10 : duration;\r\n            },\r\n            state() {\r\n                if (this.duration <= 0) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n        });\r\n        //  控制鸟在死亡后的掉落\r\n        this.bird.setActive(false);\r\n        // let targetBirdY = this.ground.y - this.bird.height + 18;\r\n        // let duration = 600;\r\n        // if (this.bird.y + 10 >= targetBirdY) {\r\n        //     targetBirdY = this.bird.y - this.bird.height + 5;\r\n        //     duration = 50;\r\n        // } else {\r\n        //     this.add.tween({\r\n        //         targets: [this.bird],\r\n        //         y: targetBirdY,\r\n        //         // angle: 45,\r\n        //         duration: duration,\r\n        //     });\r\n        // }\r\n\r\n        //  管道停止运动\r\n        // this.pipes.active = false;\r\n        this.pipes.getChildren().forEach(pipe => {\r\n            pipe.body.setAllowGravity(false);\r\n            pipe.setActive(false).setVelocity(0);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * 获取鸟儿离地面的高度\r\n     * @returns {number}\r\n     */\r\n    getBirdHeight() {\r\n        return this.ground.y - this.bird.y - this.bird.height / 2;\r\n    }\r\n\r\n    /**\r\n     * 撞击管道时结束游戏\r\n     */\r\n    hitPipe() {\r\n        if (this.hasHitPipe || this.hasHitGround) return;\r\n        this.hasHitPipe = true;\r\n        // console.log(\"hit pipe\");\r\n        this.physicBirdPipe.destroy();\r\n        this.stopGame();\r\n        this.soundHitPipe.play();\r\n    }\r\n\r\n    /**\r\n     * 撞击地面时，结束游戏\r\n     */\r\n    hitGround() {\r\n        if (this.hasHitGround || this.hasHitPipe) {\r\n            return;\r\n        }\r\n        // console.log(\"hit ground\");\r\n        // this.physics.world.removeCollider(this.physicBirdGround);\r\n        this.soundHitGround.play();\r\n        this.hasHitGround = true;\r\n        this.stopGame();\r\n    }\r\n\r\n    /**\r\n     * 小鸟飞\r\n     */\r\n    fly() {\r\n        if (this.hasStarted && !this.gameIsOver) {\r\n            this.bird.body.setVelocityY(this.flyHeight);\r\n            // if (this.isDown) {\r\n            //     this.flyDownTween.restart();\r\n            // } else {\r\n            this.flyTween.restart();\r\n            // }\r\n            this.soundFly.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一列管道\r\n     */\r\n    addColumnPipes() {\r\n        let max = this.height - this.gap - 87;\r\n        let position = Phaser.Math.Between(25, max);\r\n        //上方管道的位置\r\n        let topPipeY = position - 160;\r\n        //下方管道的位置\r\n        let bottomPipeY = position + this.gap + 100;\r\n        this.addOnePipe(this.width, topPipeY, bottomPipeY);\r\n    }\r\n\r\n    /**\r\n     * 添加一组管道\r\n     * @param x 横坐标\r\n     * @param y1 上部管道Y坐标\r\n     * @param y2 下部管道Y坐标\r\n     */\r\n    addOnePipe(x, y1, y2) {\r\n        let children = this.pipes.getChildren();\r\n        if (children.length >= 6) {\r\n            let pipe1 = children[0];\r\n            let pipe2 = children[1];\r\n            this.pipes.remove(pipe1);\r\n            this.pipes.remove(pipe2);\r\n            pipe1.hasScored = false;\r\n            pipe2.hasScored = false;\r\n            pipe1.setPosition(x, y1);\r\n            pipe2.setPosition(x, y2);\r\n            this.pipes.add(pipe1);\r\n            this.pipes.add(pipe2);\r\n        } else {\r\n            let pipe1 = this.physics.add.sprite(x, y1, 'assets', 'pipe-green-top.png').setActive(true).setVelocity(this.gameSpeed, 0).setGravity(0);\r\n            let pipe2 = this.physics.add.sprite(x, y2, 'assets', 'pipe-green-bottom.png').setActive(true).setVelocity(this.gameSpeed, 0).setGravity(0);\r\n\r\n            pipe1.body.setAllowGravity(false);\r\n            pipe2.body.setAllowGravity(false);\r\n            pipe1.pipeIndex = this.pipeIndex;\r\n            pipe2.pipeIndex = this.pipeIndex;\r\n\r\n            this.pipes.add(pipe1);\r\n            this.pipes.add(pipe2);\r\n        }\r\n        this.pipeIndex++;\r\n        // Automatically kill the pipe when it's no longer visible\r\n        // pipe.checkWorldBounds = true;\r\n        // pipe.outOfBoundsKill = true;\r\n    }\r\n\r\n    /**\r\n     * 游戏的实时更新\r\n     */\r\n    update() {\r\n        if (!this.gameIsOver) {\r\n            this.ground.tilePositionX += 2;\r\n        }\r\n        if (this.hasStarted) {\r\n            // if (this.bird.angle <= 88.25) {\r\n            //     this.bird.angle += 1.25;\r\n            // }\r\n            //分数检测和更新\r\n            this.pipes.getChildren().forEach(function (pipe, index) {\r\n                if (index % 2 === 0) return false;\r\n                if (!pipe.hasScored && pipe.x <= this.bird.x + this.bird.width) {\r\n                    pipe.hasScored = true; //标识为已经得过分\r\n                    this.labelScore.setText(++this.score); //更新分数的显示\r\n                    this.soundScore.play(); //得分的音效\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Play;\n\n\n// WEBPACK FOOTER //\n// ./src/scene/play/index.js","import preload from './preload'\r\nimport menu from './menu'\r\nimport boot from './boot'\r\nimport play from './play'\r\n\r\nexport default [boot, preload, menu, play]\n\n\n// WEBPACK FOOTER //\n// ./src/scene/index.js","import 'phaser';\r\n\r\nimport scenes from './scene'\r\n\r\nwindow.onload = function () {\r\n    var config = {\r\n        type: Phaser.AUTO,\r\n        parent: 'phaser-app',\r\n        width: 288,\r\n        height: 505,\r\n        zoom: 2,\r\n        autoResize: true,\r\n        scene: scenes,\r\n        physics: {\r\n            default: 'arcade',\r\n            arcade: {\r\n                debug: false,\r\n                gravity: {y: 500}\r\n            }\r\n        }\r\n    };\r\n\r\n    const game = new Phaser.Game(config);\r\n    game.scene.start('boot');\r\n\r\n    function resize() {\r\n        // game.resize(window.innerWidth, window.innerHeight);\r\n        var canvas = document.querySelector(\"canvas\");\r\n        var windowWidth = window.innerWidth;\r\n        var windowHeight = window.innerHeight;\r\n        var gameRatio = config.width / config.height;\r\n\r\n        if (windowWidth > windowHeight) {\r\n            //  以高度优先\r\n            canvas.style.width = (windowHeight * gameRatio) + \"px\";\r\n            canvas.style.height = \"100%\";\r\n        } else {\r\n            //  以宽度优先\r\n            canvas.style.width = \"100%\";\r\n            canvas.style.height = windowWidth / gameRatio + \"px\";\r\n        }\r\n    }\r\n\r\n    //\r\n    window.addEventListener('resize', resize, false);\r\n    resize();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}